{"version":3,"sources":["Components/Tab.js","Components/TabList.js","Components/Home.js","Components/Projects.js","Components/Travel.js","Components/About.js","firebase.js","Components/Guestbook.js","Components/Movies.js","Components/AddMovies.js","Components/CreateList.js","Components/Page404.js","Components/Body.js","App.js","serviceWorker.js","index.js","Images/helsingborg.jpg","Images/brussels-wide.jpg","Images/amsterdam.jpg","Images/capstone_poster.png"],"names":["Tab","setActive","props","tab","id","activeTab","this","className","style","onClick","changeTab","bind","title","href","Component","TabList","tabs","map","key","Home","Projects","class","src","poster","width","alt","images","swe","brussels","ams","Travel","state","photoIndex","isOpen","videoOpts","height","playerVars","autoplay","videoId","opts","setState","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","About","firebase","initializeApp","apiKey","authDomain","databaseURL","validEmailRegex","RegExp","pattern","date","compile","Guestbook","name","bio","msg","isPublic","email","errors","items","handleChange","handleSubmit","e","preventDefault","target","value","test","valid","Object","values","forEach","val","validateForm","console","info","currDate","format","Date","toString","log","itemsRef","database","ref","formData","push","alert","on","snapshot","newState","item","form","onSubmit","animate","x","transition","duration","type","placeholder","onChange","div","Movies","moviesList","listOfLists","titleSearch","currentComponent","once","then","childSnapshot","grandSnapshot","movieObject","newMovie","director","rating","imdbID","undefined","prevState","listName","targetName","foundMovie","matchedMovie","currMovieObject","numMovies","renderCustomList","movie","altInfo","AddMovies","axios","get","res","data","moviesRef","Title","Director","imdbRating","Poster","catch","err","CreateList","Page404","Body","displayContent","App","ShowAtPosition","window","innerHeight","AnimationDuration","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.022a914e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Tab extends Component {\n\n    setActive = () => {\n        if (this.props.tab.id === this.props.activeTab) {\n            return {\n                'borderBottom': '3px solid rgb(68, 190, 190)'\n            }\n        } else {\n            return {\n                'borderBottom': '3px solid darkgray'\n            }\n        }\n    }\n\n    render() {\n\n        if (this.props.tab.id !== 6) {\n            return (\n                <div className='nav-tab' \n                     style={this.setActive()}\n                     onClick={this.props.changeTab.bind(this, this.props.tab.id)}>\n                    {this.props.tab.title}\n                </div>\n            );\n        } else {\n            return (\n                <div className='dropdown'>\n                    <div className='nav-tab-dropdown' style={this.setActive()} onClick={this.props.changeTab.bind(this, this.props.tab.id)}>\n                        {this.props.tab.title}\n                    </div>\n                    <div className='dropdown-content'>\n                        <a href='#gallery' onClick={this.props.changeTab.bind(this, this.props.tab.id)}>Movie Gallery</a>\n                        <a href='#addMovie' onClick={this.props.changeTab.bind(this, 7)}>Add New Movie</a>\n                        <a href='#createList' onClick={this.props.changeTab.bind(this, 8)}>Create Movie List</a>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Tab;","import React, { Component } from 'react';\nimport Tab from './Tab';\n\nclass TabList extends Component {\n    render() {\n        return this.props.tabs.map((tab, id) => (\n            <Tab tab={tab} \n                 activeTab={this.props.activeTab}\n                 changeTab={this.props.changeTab}\n                 key={id}/>\n        ));\n    }\n}\n\nexport default TabList;","import React, { Component } from 'react';\nimport './../App.css';\n\nclass Home extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className=\"title\">\n                     {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n                    <h1>Hello, world 🌎</h1>\n                </div>\n\n                <div className=\"lowerBody\">\n                    <div className=\"article\">\n                    Howdy stranger! Welcome to my portfolio website. It's very unfinished so pls don't mind the mess :)\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nimport poster from './../Images/capstone_poster.png';\n\nclass Projects extends Component {\n    render() {\n        return (\n            <div>\n                <div class='title'>\n                    <h1>Projects</h1>\n                </div>\n\n                <div class='lowerBody'>\n                    <div class='article'>\n                        <h2>Apollo - Senior Capstone Project</h2>\n                        I'd say we did pretty well :)\n                        <p>\n                        <img src={poster} width='100%' alt=''/>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport YouTube from 'react-youtube';\n\nimport swe from './../Images/helsingborg.jpg';\nimport brussels from './../Images/brussels-wide.jpg';\nimport ams from './../Images/amsterdam.jpg';\nconst images = [swe, brussels, ams];  \n\nclass Travel extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            photoIndex: 0,\n            isOpen: false,\n        };\n    }\n\n    render() {\n\n        const { photoIndex, isOpen } = this.state;\n\n        const videoOpts = {\n            height: '100%',\n            width: '100%',\n            playerVars: {\n              // https://developers.google.com/youtube/player_parameters\n              autoplay: 0\n            },\n          };\n\n        return (\n            <div>\n\n                <div className=\"title\">\n                    <h1>Travel</h1>\n                </div>\n\n                <div className=\"lowerBody\">\n                        <div className='article2'>\n                            <h2>One Second a Day Abroad</h2>\n                            <i>we get it u studied abroad</i>\n                            <br/><br/>\n                            <YouTube videoId=\"5_dbVMXtqNs\" opts={videoOpts} />                       \n                        </div>\n                        <div className='article2'>\n                            <h2>Summer 2018 in Sweden</h2>\n                            Some clips from just the summer portion\n                            <br/><br/>\n                            <YouTube videoId=\"BCly0NsWc-g\" opts={videoOpts}/>\n                        </div>\n                </div>\n\n                <p></p>\n\n                <div className=\"lowerBody\">\n                    <div className='article3'>\n                        <h2>Helsingborg, Sweden</h2><br/>\n                            <img src={swe} alt='' onClick={() => this.setState({ isOpen: true })}/>\n                    </div>\n                    <div className='article3'>\n                        <h2>Brussels, Belgium</h2><br/>\n                            <img src={brussels} alt='' onClick={() => this.setState({ isOpen: true })}/>\n                    </div>\n                    <div className='article3'>\n                        <h2>Amsterdam, The Netherlands</h2><br/>\n                            <img src={ams} alt='' onClick={() => this.setState({ isOpen: true })}/>\n                    </div>\n                </div>\n\n                {isOpen && (\n                    <Lightbox\n                        mainSrc={images[photoIndex]}\n                        nextSrc={images[(photoIndex + 1) % images.length]}\n                        prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                        onCloseRequest={() => this.setState({ isOpen: false })}\n                        onMovePrevRequest={() =>\n                        this.setState({\n                            photoIndex: (photoIndex + images.length - 1) % images.length,\n                        })\n                        }\n                        onMoveNextRequest={() =>\n                        this.setState({\n                            photoIndex: (photoIndex + 1) % images.length,\n                        })\n                        }\n                    />\n                )}\n\n            </div>\n        );\n    }\n}\n\nexport default Travel;","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                <div className='title'>\n                    <h1>About Me</h1>\n                </div>\n\n                <div className='lowerBody'>\n                        <div className='article2'>\n                            <h2>How I Got Started in CS</h2>\n                            Well, this comic is a very accurate representation of me @ age 12.\n                            <br/>\n                            <img src='https://preview.redd.it/fv2c69uvvog41.jpg?width=960&crop=smart&auto=webp&s=e1913cbd6b97bb521bc080edd973b33b2fd5437e' \n                                    width='300px' alt=''/>\n                        </div>\n                    \n                        <div className='article2'>\n                            <h2>I'm Michelle. Say hi!</h2>\n                            <img src=\"https://capstone.cs.ucsb.edu/team_docs_20/pics/well/nguyen.png\" width=\"30%\" alt=''/>\n                            <br/><br/>Email: michellehnguyen@gmail.com\n                            <br/>LinkedIn: <a href='https://www.linkedin.com/in/michelle-mh-nguyen/' >/michelle-mh-nguyen</a>\n                        </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default About;","import firebase from 'firebase/app'\nimport 'firebase/database'\nimport 'firebase/auth'\nconst config = {\n    apiKey: \"AIzaSyCKkfCtgNHWTWj8AqPlMCRgDhGSxDYkj0s\",\n    authDomain: \"ucsb-cs1850-mn.firebaseapp.com\",\n    databaseURL: \"https://ucsb-cs1850-mn.firebaseio.com\"\n};\nfirebase.initializeApp(config);\nexport default firebase;","import React, { Component } from 'react'\nimport firebase from '../firebase'\nimport date from 'date-and-time';\nimport { motion } from 'framer-motion';\nimport '../milligram.css'\n// resource for a lot of the code used: https://css-tricks.com/intro-firebase-react/\n// another resource for form validation: https://www.telerik.com/blogs/up-and-running-with-react-form-validation\n// aesthetics: https://milligram.io/forms.html\n\nconst validEmailRegex = \n  // eslint-disable-next-line no-useless-escape\n  RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = (errors, name, msg) => {\n    let valid = true;\n    Object.values(errors).forEach(\n        // if we have an error string set valid to false\n        (val) => val.length > 0 && (valid = false)\n    );\n    if (name.length === 0 || msg.length === 0) {\n        valid = false\n    }\n    return valid;\n};\n\nconst pattern = date.compile('MMM D YYYY hh:mm A');\n\nclass Guestbook extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            bio: '',\n            msg: '',\n            isPublic: false,\n            email: '',\n            date: '',\n            errors: {\n                name: '',\n                bio: '',\n                msg: '',\n                email: ''\n            },\n            items: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        const {name, value} = e.target;\n        let errors = this.state.errors;\n\n        switch (name) {\n\n            case 'name':\n                errors.name = value.length < 5 || value.length > 20\n                                ? 'Name must be between 5 and 20 characters.'\n                                : '';\n                break;\n            case 'bio':\n                errors.bio = value.length > 100\n                                ? 'Description must be less than 100 characters.'\n                                : '';\n                break;\n            case 'msg':\n                errors.msg = value.length < 15 || value.length > 500\n                                ? 'Message must be between 15 and 500 characters.'\n                                : '';\n                break;\n            case 'email': \n                errors.email = validEmailRegex.test(value)\n                                ? ''\n                                : 'Email is not valid!';\n                break;\n            default:\n                break;\n\n        }\n\n        this.setState({errors, [name]: value});\n\n    }\n\n    /*  FUNCTIONAL TODO:\n        - DONE! prevent form submission + don't actually submit if there are errors\n            - no name, msg, or privacy setting\n            - other fields don't have proper length\n        - DONE! scroll message div when too many messages\n        - DONE! only display public messages\n        - DONE! apply formatting to public messages\n            - name, bio, msg, DATE (figure out)\n        - DONE! alert upon successful submission\n\n        AESTHETIC TODO:\n        - EXTRA CREDIT:\n            - animate form arrival on loading\n            - animate new message arrival\n    */\n    handleSubmit(e) {\n\n        // prevent page from refreshing\n        e.preventDefault(); \n\n        if(validateForm(this.state.errors, this.state.name, this.state.msg)) {\n            console.info('Valid Form');\n        } else {\n            alert('There are errors with your submission. Please check to see if you have properly filled out the required sections.');\n            return;\n        }\n\n        let currDate = date.format(new Date(), pattern).toString();\n\n        console.log(currDate);\n\n        // tell firebase where to store our form data\n        const itemsRef = firebase.database().ref('items');\n\n        // take what user inputted and package into object to send to firebase\n        const formData = {\n          name: this.state.name,\n          bio: this.state.bio,\n          msg: this.state.msg,\n          isPublic: this.state.isPublic,\n          email: this.state.email,\n          date: currDate\n        }\n\n        // send to firebase \n        itemsRef.push(formData);\n\n        // reset items in the form to empty\n        this.setState({\n            name: '',\n            bio: '',\n            msg: '',\n            isPublic: false,\n            email: '',\n            date: ''\n        });\n\n        alert('Your message has been submitted!');\n    }\n\n    componentDidMount() {\n        const itemsRef = firebase.database().ref('items');\n        itemsRef.on('value', (snapshot) => {\n          let items = snapshot.val();\n          let newState = [];\n          for (let item in items) {\n            newState.push({\n              id: item,\n              name: items[item].name,\n              bio: items[item].bio,\n              msg: items[item].msg,\n              isPublic: items[item].isPublic,\n              email: items[item].email,\n              date: items[item].date\n            });\n          }\n          this.setState({\n            items: newState\n          });\n        });\n    }\n\n    render() {\n\n        const {errors} = this.state;\n        \n        return (\n            <div>\n\n                <div className='title'>\n                    <h1>Say Hello!</h1>\n                </div>\n\n\n                {/* NOTES\n                    - get data from firebase (using listener)\n                    - trigger re-render with new messages\n                    - map messsages to formatted\n                */}\n\n                <div className='messageContainer'>\n                    \n                    <div className='article2'>\n\n                    <motion.form \n                        onSubmit={this.handleSubmit}\n                        animate={{ x: 20 }}\n                        transition={{ duration: 1 }}\n                    >\n                        <label>Name (Required)</label>\n                        <input type=\"text\" name=\"name\" placeholder=\"What's your name?\" \n                            onChange={this.handleChange} value={this.state.name} />\n                        {errors.name.length > 0 && <div className='error'>{errors.name}</div>}\n\n                        <label>Description</label>\n                        <input type=\"text\" name=\"bio\" placeholder=\"Write a short description about yourself.\" \n                            onChange={this.handleChange} value={this.state.bio} />\n                        {errors.bio.length > 0 && <div className='error'>{errors.bio}</div>}\n\n                        \n                        <label>Message (Required)</label>\n                        <textarea type=\"text\" name=\"msg\" placeholder=\"What would you like to tell me?\" \n                            onChange={this.handleChange} value={this.state.msg} />\n                        {errors.msg.length > 0 && <div className='error'>{errors.msg}</div>}\n\n                        <label>Would you like your message public or private? (Click to select)</label>\n                        <select type=\"text\" name=\"isPublic\" placeholder=\"Would you like your message public or private?\" \n                            onChange={this.handleChange} value={this.state.isPublic}>\n                                <option value='true'>Public</option>\n                                <option value='false'>Private</option>\n                        </select>\n\n                        <label>Email Address</label>\n                        <input type=\"text\" name=\"email\" placeholder=\"What is your email?\" \n                            onChange={this.handleChange} value={this.state.email} />\n                        \n                        <br/><br/><button>Submit</button>\n                    </motion.form>\n\n                    </div>\n\n                    <div className='messages'>\n\n                        {/* basically gonna use map function to grab data from firebase and map out */}\n\n                        {/* eslint-disable-next-line array-callback-return */}\n                        { this.state.items.map((item) => {\n                             if (item.isPublic) {\n                                return (\n                                    <motion.div \n                                        key={item.id}\n                                        animate={{ x: 20 }}\n                                        transition={{ duration: 1 }}\n                                    >\n                                        <div className='date'> {item.date} </div>\n                                        <div className='msgName'>{item.name}</div>\n                                        <div className='bio'>{item.bio}</div>\n                                        <div className='msg'>{item.msg}</div>\n                                        <p></p>\n                                    </motion.div>\n                                )\n                            } \n                            \n                        }) \n                        }\n\n\n                    </div>\n\n\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Guestbook;","import React, { Component } from 'react';\nimport firebase from '../firebase'\nimport SimpleReactLightbox, { SRLWrapper } from \"simple-react-lightbox\";\nimport '../milligram.css'\n\n// let movies_list = ['tt0381707', 'tt0878804', 'tt0109830', 'tt0245429', 'tt0095016', 'tt0268978', \n//                     'tt0319343', 'tt0119177', 'tt0119116', 'tt0816692', 'tt0910970', 'tt0099785',\n//                     'tt3104988', 'tt0162222', 'tt0360717', 'tt0486655', 'tt1049413', 'tt0097165',\n//                     'tt1431045', 'tt0091042', 'tt0241527', 'tt1375666']\n// White Chicks, The Blind Side, Forrest Gump, Spirited Away, Die Hard, A Beautiful Mind,\n// Elf, Gattaca, The Fifth Element, Interstellar, Wall-E, Home Alone\n// Crazy Rich Asians, Cast Away, King Kong, Stardust, Up, Dead Poet's Society\n// Deadpool, Ferris Bueller's Day Off, Harry Potter, Inception\n\n/*\n\nTODO:\n\n1.1 - Add new movie\n------------\n- DONE\n\n1.2 - Delete a movie\n------------\n- need to delete from ALL databases\n- tbd when modal fixed\n\n1.3 - Display movies\n------\n- DONE\n\n1.4 - Create new list\n------\n- DONE\n\n1.5 - Choose the list to display\n------\n- currently have the ability to command an onClick() to show specific list, \n    just need to implement the onClick()/helper function\n\n1.6 - Add a movie to a list\n------\n- tbd when modal fixed\n\n1.7 - Search for a movie\n------\n- just need to change what's displayed below\n\n1.8 - Pagination\n------\n- tbd after everything\n\n*/\nclass Movies extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            moviesList: [],\n            listOfLists: [],\n            titleSearch: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n\n        console.log('called component did mount')\n\n        let currentComponent = this;\n\n        // load movies to display into state\n        firebase.database().ref('/movieList/All/').once('value').then(function(snapshot) {\n            snapshot.forEach(function(childSnapshot) {\n                childSnapshot.forEach(function(grandSnapshot) {\n                    var movieObject = grandSnapshot.val();\n\n                    // create object with data\n                    let newMovie = {\n                        title: movieObject.title,\n                        director: movieObject.director,\n                        rating: movieObject.rating,\n                        poster: movieObject.poster,\n                        imdbID: movieObject.imdbID\n                    }\n\n                    if (newMovie.title !== undefined) {\n                        // place into state\n                        currentComponent.setState(prevState => ({\n                            moviesList: [...prevState.moviesList, newMovie]\n                        }))\n                    }\n                        \n                });\n              });\n        });\n\n        // load listNames to dropdown into state\n        firebase.database().ref('/movieList/').once('value').then(function(snapshot) {\n            snapshot.forEach(function(childSnapshot) {\n                let listName = childSnapshot.key;\n                currentComponent.setState(prevState => ({\n                    listOfLists: [...prevState.listOfLists, listName]\n                }))\n            });\n        });\n    }\n\n    renderCustomList(e) {\n\n        e.preventDefault();\n        \n        console.log('called render custom list')\n\n        let currentComponent = this;\n\n        // clear out state\n        // currentComponent.setState({moviesList: []})\n\n        // read from firebase with specific list\n        firebase.database().ref('/movieList/' + 'Watched' + '/').once('value').then(function(snapshot) {\n            snapshot.forEach(function(childSnapshot) {\n                childSnapshot.forEach(function(grandSnapshot) {\n                    var movieObject = grandSnapshot.val();\n                        //HBJ9SDU64G4\n                    // create object with data\n                    let newMovie = {\n                        title: movieObject.title,\n                        director: movieObject.director,\n                        rating: movieObject.rating,\n                        poster: movieObject.poster,\n                        imdbID: movieObject.imdbID\n                    }\n\n                    if (newMovie.title !== undefined) {\n                        // place into state\n                        currentComponent.setState(prevState => ({\n                            moviesList: [...prevState.moviesList, newMovie]\n                        }))\n                    }\n                        \n                });\n              });\n        });\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        const {name, value} = e.target;\n        this.setState({[name]: value});\n    }\n\n    handleSubmit(e) {\n\n        e.preventDefault(); \n\n        // get movie name\n        let targetName = this.state.titleSearch;\n        console.log(targetName);\n\n        let foundMovie = false;\n        let matchedMovie = [];\n\n        // connect to firebase to search through all movies \n        firebase.database().ref('/movieList/All/').once('value').then(function(snapshot) {\n            snapshot.forEach(function(childSnapshot) {\n                childSnapshot.forEach(function(grandSnapshot) {\n                    let currMovieObject = grandSnapshot.val();\n                    let currTitle = currMovieObject.title;\n                    if (currTitle === targetName){\n                        foundMovie = true;\n\n                        matchedMovie.push({\n                            title: currMovieObject.title,\n                            director: currMovieObject.director,\n                            rating: currMovieObject.rating,\n                            poster: currMovieObject.poster,\n                            imdbID: currMovieObject.imdbID\n                        });\n\n                        console.log('handleSubmit(): found a match:', matchedMovie);\n                        // TODO: display ONLY that movie below now\n                    } \n                });\n            });\n\n            if (!foundMovie) {\n                console.log('handleSubmit(): Movie does not exist in database');\n            }\n        });\n        \n        // reset item search to empty\n        this.setState({\n            titleSearch: '',\n            moviesList:matchedMovie\n        });\n    }\n\n    render() {\n\n        let numMovies = 0;\n        \n        return (\n            <div>\n                \n                <div className='title'>\n                    <h1>Movie Database</h1>\n                </div>\n\n                <div className='lowerBody'>\n                    <div className='article'>\n                        <form onSubmit={this.handleSubmit}>\n                            <label>Type the name of the movie you're searching for</label>\n                            <input type=\"text\" name=\"titleSearch\" placeholder=\"New Custom List Name\" \n                                onChange={this.handleChange} value={this.state.name} />\n                            <button>Search</button>\n                        </form>\n                    </div>\n                </div>\n\n                <p></p>\n\n                <div className='lowerBody'>\n\n                    <div className='article'> \n\n                    <div className=\"dropdown\">\n                        <button className=\"dropbtn\">Select List</button>\n                        <br/><br/>\n                        <div className=\"dropdown-content\">\n                            { this.state.listOfLists.map((listName) => {\n                                return (\n                                    <a href=' ' key={listName}\n                                       onClick={() => this.renderCustomList}>{listName}</a>\n                                )\n                            }) \n                            }\n                        </div>\n                    </div>\n\n                    <p>\n\n                        {console.log('render():', this.state.moviesList)}\n\n                        <SimpleReactLightbox>\n                        <SRLWrapper>\n                        { this.state.moviesList.map((movie) => {\n\n                            if (movie.title !== '' || movie.title !== undefined) {\n\n                                numMovies++;\n\n                                let movieTitle = movie.title;\n                                let movieDirector = movie.director;\n                                let movieRating = movie.rating;\n                                let altInfo = movieTitle + ' | Directed by ' + movieDirector + ' | IMDB Rating: ' + movieRating;                                \n                                return (\n                                    <img className='movie' \n                                        alt={altInfo} \n                                        key={movie.imdbID} \n                                        src={movie.poster}\n                                    />\n                                )\n                            }\n                            console.log(numMovies)   \n                        })}\n                        </SRLWrapper>\n                        </SimpleReactLightbox>\n                    \n                    </p>\n\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Movies;","import React, { Component } from 'react';\nimport firebase from '../firebase'\nimport axios from \"axios\"; \nimport '../milligram.css'\n\nconst api_url = 'https://www.omdbapi.com/?apikey=1bfcf4bf&i=' // needs IMDB ID\n\nconst validateForm = (errors, imdbID) => {\n    let valid = true;\n    Object.values(errors).forEach(\n        // if we have an error string set valid to false\n        (val) => val.length > 0 && (valid = false)\n    );\n    if (imdbID.length === 0) {\n        valid = false\n    }\n    return valid;\n};\n\nclass AddMovies extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            imdbID: '',\n            errors: {\n                imdbID: ''\n            },\n            movieObject: {}\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        const {name, value} = e.target;\n        let errors = this.state.errors;\n\n        switch (name) {\n\n            case 'imdbID':\n                errors.imdbID = value.length < 9 || value[0] !== 't' || value.length > 9\n                                ? 'IMDB ID must be a valid, existing ID.'\n                                : '';\n                break;\n            default:\n                break;\n\n        }\n\n        this.setState({errors, [name]: value});\n\n    }\n\n    handleSubmit(e) {\n\n        // prevent page from refreshing\n        e.preventDefault(); \n\n        if(validateForm(this.state.errors, this.state.imdbID)) {\n            console.info('Valid Form');\n        } else {\n            alert('There is an error with your submission. Please check if the IMDB ID is correct.');\n            return;\n        }\n\n        // make api call to get the desired data\n        axios.get(api_url+this.state.imdbID)\n            .then(res => {\n                let movieObject = res.data;\n\n                // tell firebase where to store our form data\n                const moviesRef = firebase.database().ref('movieList/All/' + movieObject.imdbID);\n\n                let newMovie = {\n                    title: movieObject.Title,\n                    director: movieObject.Director,\n                    rating: movieObject.imdbRating,\n                    poster: movieObject.Poster,\n                    imdbID: movieObject.imdbID\n                };\n                console.log(newMovie);\n\n                // package the movie data into an object, store in state\n                this.setState({movieObject: newMovie});\n\n                 // send movie to firebase\n                moviesRef.push(newMovie);\n\n                // tell user the movie they've submitted\n                alert('The movie ' + newMovie.title + ' has been added to the database.');\n\n            }).catch(err => {\n                console.log(err);\n        });\n\n        // reset items in the form to empty\n        this.setState({\n            imdbID: '',\n            movieObject: ''\n        });\n    }\n\n    render() {\n\n        const {errors} = this.state;\n\n        return (\n            <div>\n                <div className='title'>\n                    <h1>Add New Movie</h1>\n                </div>\n\n                <div className='lowerBody'>\n                    <div className='article'>\n                        Here you can add a new movie.\n\n                        <form onSubmit={this.handleSubmit}>\n                            <label>Enter the IMDB ID of the movie you would like to add.</label>\n                            <input type=\"text\" name=\"imdbID\" placeholder=\"IMDB Movie ID\" \n                                onChange={this.handleChange} value={this.state.name} />\n                            {errors.imdbID.length > 0 && <div className='error'>{errors.imdbID}</div>}\n                            <button>Submit</button>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddMovies;","import React, { Component } from 'react';\nimport firebase from '../firebase'\nimport '../milligram.css'\n\nclass CreateList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            listName: '',\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        const {name, value} = e.target;\n        this.setState({[name]: value});\n    }\n\n    handleSubmit(e) {\n\n        // // prevent page from refreshing\n        // e.preventDefault(); \n\n        // connect to firebase and create new list\n        let listRef = firebase.database().ref('movieList/' + this.state.listName + '/');\n\n        // create null object to push into db\n        let emptyMovieObject = {\n            title: '',\n            director: '',\n            rating: '',\n            poster: '',\n            imdbID: ''\n        }\n        \n        // // push new list to firebase\n        listRef.push(emptyMovieObject);\n\n        // reset items in the form to empty\n        this.setState({\n            listName: ''\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='title'>\n                    <h1>Create Custom Movie Lists</h1>\n                </div>\n\n                <div className='lowerBody'>\n                    <div className='article'>\n                        Here you can create a custom movie list.\n\n                        <form onSubmit={this.handleSubmit}>\n                            <label>Enter your custom list name.</label>\n                            <input type=\"text\" name=\"listName\" placeholder=\"New Custom List Name\" \n                                onChange={this.handleChange} value={this.state.name} />\n                            <button>Submit</button>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CreateList;","import React, { Component } from 'react';\n\nclass Page404 extends Component {\n    render() {\n        return (\n            <div>\n                <div className='title'>\n                    <h1>404 - This page does not exist.</h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Page404;","import React, { Component } from 'react';\nimport Home from './Home';\nimport Projects from './Projects';\nimport Travel from './Travel';\nimport About from './About';\nimport Guestbook from './Guestbook';\nimport Movies from './Movies';\nimport AddMovies from './AddMovies';\nimport CreateList from './CreateList';\nimport Page404 from './Page404';\n\nclass Body extends Component {\n\n    displayContent = () => {\n        let activeTab = this.props.activeTab;\n        switch (activeTab) {\n            case 1:\n                return (<Home/>);\n            case 2:\n                return (<Projects/>);\n            case 3:\n                return (<Travel/>);\n            case 4:\n                return (<About/>);\n            case 5:\n                return (<Guestbook/>);\n            case 6:\n                return (<Movies/>);\n            case 7:\n                return (<AddMovies/>);  \n            case 8:\n                return (<CreateList/>)\n            default:\n                return (<Page404/>);\n        }\n    }\n\n    render() {\n        return (\n            this.displayContent()\n        );\n    }\n}\n\nexport default Body;","import React, { Component } from 'react';\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport TabList from './Components/TabList';\nimport Body from './Components/Body';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      activeTab: 1 // default: Home\n    }\n\n    this.changeTab = (id) => {\n      this.setState(\n        {\n          activeTab: id\n        }\n      )\n    }\n\n  }\n\n  render() {\n\n    this.tabs = [\n      {\n        id: 1,\n        title: 'Home'\n      },\n      {\n        id: 2,\n        title: 'Projects'\n      },\n      {\n        id: 3,\n        title: 'Travel'\n      },\n      {\n        id: 4,\n        title: 'About'\n      },\n      {\n        id: 5,\n        title: 'Guest Book'\n      },\n      {\n        id: 6,\n        title: 'Movies'\n      }\n    ]\n\n    return (\n      <div className='body'>\n\n        <ScrollUpButton \n          ShowAtPosition={0.2*window.innerHeight}\n          AnimationDuration={250}\n        />\n\n        <div className='nav-bar'>\n          <TabList tabs={this.tabs} \n                   activeTab={this.state.activeTab}\n                   changeTab={this.changeTab}/>\n        </div>\n        <div className='actual-body'>\n            <Body activeTab={this.state.activeTab}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/helsingborg.2d4f5efe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brussels-wide.e0050154.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amsterdam.810d08b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/capstone_poster.05e850ef.png\";"],"sourceRoot":""}